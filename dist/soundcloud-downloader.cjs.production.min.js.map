{"version":3,"file":"soundcloud-downloader.cjs.production.min.js","sources":["../src/formats.ts","../node_modules/regenerator-runtime/runtime.js","../src/util.ts","../src/info.ts","../src/download.ts","../src/download-playlist.ts","../src/filter-media.ts","../src/protocols.ts","../src/likes.ts","../src/search.ts","../src/url.ts","../src/user.ts","../src/index.ts"],"sourcesContent":["/**\n * Audio formats a track can be encoded in.\n */\nenum FORMATS {\n  MP3 = 'audio/mpeg',\n  OPUS = 'audio/ogg; codecs=\"opus\"'\n}\n\n/** @internal */\nexport const _FORMATS = {\n  MP3: FORMATS.MP3,\n  OPUS: FORMATS.OPUS\n}\n\nexport default FORMATS\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","/** @internal @packageDocumentation */\nimport { URL } from 'url'\n\nimport { AxiosError } from 'axios'\n\n/* eslint-disable camelcase */\nexport interface PaginatedQuery<T> {\n  collection: T[]\n  total_results?: number // is omitted if limit parameter is supplied\n  next_href: string\n  query_urn: string\n}\n\nexport const resolveURL = 'https://api-v2.soundcloud.com/resolve'\nexport const handleRequestErrs = (err: AxiosError) => {\n  if (!err.response) return err\n  if (!err.response.status) return err\n\n  if (err.response.status === 401) err.message += ', is your Client ID correct?'\n  if (err.response.status === 404)\n    err.message +=\n      ', could not find the song... it may be private - check the URL'\n  return err\n}\n\nexport const appendURL = (url: string, ...params: string[]) => {\n  const u = new URL(url)\n  params.forEach((val, idx) => {\n    if (idx % 2 === 0) u.searchParams.append(val, params[idx + 1])\n  })\n  return u.href\n}\n\nexport const extractIDFromPersonalizedTrackURL = (url: string): string => {\n  if (\n    !url.includes('https://soundcloud.com/discover/sets/personalized-tracks::')\n  )\n    return ''\n\n  const split = url.split(':')\n  if (split.length < 5) return ''\n  return split[4]\n}\n\nexport const kindMismatchError = (expected: string, received: string): Error =>\n  new Error(`Expected resouce of kind: (${expected}), received: (${received})`)\n","/* eslint-disable camelcase */\nimport { AxiosInstance } from 'axios'\n\nimport FORMATS from './formats'\nimport STREAMING_PROTOCOLS from './protocols'\nimport {\n  appendURL,\n  extractIDFromPersonalizedTrackURL,\n  handleRequestErrs\n} from './util'\n\n/**\n * A Soundcloud user\n */\nexport interface User {\n  kind: string\n  avatar_url: string\n  city: string\n  comments_count: number\n  country_code: string\n  created_at: string\n  description: string\n  followers_count: number\n  followings_count: number\n  first_name: string\n  full_name: string\n  groups_count: number\n  id: number\n  last_name: string\n  permalink_url: string\n  uri: string\n  username: string\n}\n\n/**\n * Details about the track\n */\nexport interface TrackInfo {\n  kind: string\n  monetization_model: string\n  id: number\n  policy: string\n  comment_count?: number\n  full_duration?: number\n  downloadable?: false\n  created_at?: string\n  description?: string\n  media?: { transcodings: Transcoding[] }\n  title?: string\n  publisher_metadata?: any\n  duration?: number\n  has_downloads_left?: boolean\n  artwork_url?: string\n  public?: boolean\n  streamable?: true\n  tag_list?: string\n  genre?: string\n  reposts_count?: number\n  label_name?: string\n  state?: string\n  last_modified?: string\n  commentable?: boolean\n  uri?: string\n  download_count?: number\n  likes_count?: number\n  display_date?: string\n  user_id?: number\n  waveform_url?: string\n  permalink?: string\n  permalink_url?: string\n  user?: User\n  playback_count?: number\n}\n\n/**\n * Details about a Set\n */\nexport interface SetInfo {\n  title: string\n  duration: number\n  permalink_url: string\n  reposts_count: number\n  genre: string\n  permalink: string\n  purchase_url?: string\n  description?: string\n  uri: string\n  label_name?: string\n  tag_list: string\n  set_type: string\n  public: boolean\n  track_count: number\n  user_id: number\n  last_modified: string\n  license: string\n  tracks: TrackInfo[]\n  id: number\n  release_date?: string\n  display_date: string\n  sharing: string\n  secret_token?: string\n  created_at: string\n  likes_count: number\n  kind: string\n  purchase_title?: string\n  managed_by_feeds: boolean\n  artwork_url?: string\n  is_album: boolean\n  user: User\n  published_at: string\n  embeddable_by: string\n}\n\n/**\n * Represents an audio link to a Soundcloud Track\n */\nexport interface Transcoding {\n  url: string\n  preset: string\n  snipped: boolean\n  format: { protocol: STREAMING_PROTOCOLS; mime_type: FORMATS }\n}\n\nconst getTrackInfoBase = async (\n  clientID: string,\n  axiosRef: AxiosInstance,\n  ids: number[],\n  playlistID?: number,\n  playlistSecretToken?: string\n): Promise<TrackInfo[]> => {\n  let url = appendURL(\n    'https://api-v2.soundcloud.com/tracks',\n    'ids',\n    ids.join(','),\n    'client_id',\n    clientID\n  )\n  if (playlistID && playlistSecretToken) {\n    url = appendURL(\n      url,\n      'playlistId',\n      '' + playlistID,\n      'playlistSecretToken',\n      playlistSecretToken\n    )\n  }\n  try {\n    const { data } = await axiosRef.get(url)\n\n    return data as TrackInfo[]\n  } catch (err) {\n    throw handleRequestErrs(err)\n  }\n}\n\n/** @internal */\nexport const getInfoBase = async <T extends TrackInfo | SetInfo>(\n  url: string,\n  clientID: string,\n  axiosRef: AxiosInstance\n): Promise<T> => {\n  try {\n    const res = await axiosRef.get(\n      appendURL(\n        'https://api-v2.soundcloud.com/resolve',\n        'url',\n        url,\n        'client_id',\n        clientID\n      ),\n      {\n        withCredentials: true\n      }\n    )\n\n    return res.data as T\n  } catch (err) {\n    console.log(err)\n    throw handleRequestErrs(err)\n  }\n}\n\n/** @internal */\nconst getSetInfoBase = async (\n  url: string,\n  clientID: string,\n  axiosRef: AxiosInstance\n): Promise<SetInfo> => {\n  const setInfo = await getInfoBase<SetInfo>(url, clientID, axiosRef)\n  const temp = [...setInfo.tracks].map((track) => track.id)\n  const playlistID = setInfo.id\n  const playlistSecretToken = setInfo.secret_token\n  const incompleteTracks = setInfo.tracks.filter((track) => !track.title)\n  if (incompleteTracks.length === 0) {\n    return setInfo\n  }\n  const completeTracks = setInfo.tracks.filter((track) => track.title)\n\n  const ids = incompleteTracks.map((t) => t.id)\n  if (ids.length > 50) {\n    const splitIds: number[][] = []\n    for (let x = 0; x <= Math.floor(ids.length / 50); x++) {\n      splitIds.push([])\n    }\n\n    for (let x = 0; x < ids.length; x++) {\n      const i = Math.floor(x / 50)\n      splitIds[i].push(ids[x])\n    }\n\n    const promises = splitIds.map(\n      async (ids) =>\n        await getTrackInfoByID(\n          clientID,\n          axiosRef,\n          ids,\n          playlistID,\n          playlistSecretToken\n        )\n    )\n    const info = await Promise.all(promises)\n    setInfo.tracks = completeTracks.concat(...info)\n    setInfo.tracks = sortTracks(setInfo.tracks, temp)\n    return setInfo\n  }\n  const info = await getTrackInfoByID(\n    clientID,\n    axiosRef,\n    ids,\n    playlistID,\n    playlistSecretToken\n  )\n\n  setInfo.tracks = completeTracks.concat(info)\n  setInfo.tracks = sortTracks(setInfo.tracks, temp)\n  return setInfo\n}\n\n/** @internal */\nconst sortTracks = (tracks: TrackInfo[], ids: number[]): TrackInfo[] => {\n  for (let i = 0; i < ids.length; i++) {\n    if (tracks[i].id !== ids[i]) {\n      for (let j = 0; j < tracks.length; j++) {\n        if (tracks[j].id === ids[i]) {\n          const temp = tracks[i]\n          tracks[i] = tracks[j]\n          tracks[j] = temp\n        }\n      }\n    }\n  }\n\n  return tracks\n}\n\n/** @internal */\nconst getInfo = async (\n  url: string,\n  clientID: string,\n  axiosInstance: AxiosInstance\n): Promise<TrackInfo> => {\n  let data\n  if (\n    url.includes('https://soundcloud.com/discover/sets/personalized-tracks::')\n  ) {\n    const idString = extractIDFromPersonalizedTrackURL(url)\n    if (!idString)\n      throw new Error('Could not parse track ID from given URL: ' + url)\n    let id: number\n    try {\n      id = parseInt(idString)\n    } catch (err) {\n      throw new Error('Could not parse track ID from given URL: ' + url)\n    }\n\n    data = (await getTrackInfoByID(clientID, axiosInstance, [id]))[0]\n    if (!data) throw new Error('Could not find track with ID: ' + id)\n  } else {\n    data = await getInfoBase<TrackInfo>(url, clientID, axiosInstance)\n  }\n  if (!data.media)\n    throw new Error('The given URL does not link to a Soundcloud track')\n  return data\n}\n\n/** @internal */\nexport const getSetInfo = async (\n  url: string,\n  clientID: string,\n  axiosInstance: AxiosInstance\n): Promise<SetInfo> => {\n  const data = await getSetInfoBase(url, clientID, axiosInstance)\n  if (!data.tracks)\n    throw new Error('The given URL does not link to a Soundcloud set')\n  return data\n}\n\n/** @intenral */\nexport const getTrackInfoByID = async (\n  clientID: string,\n  axiosInstance: AxiosInstance,\n  ids: number[],\n  playlistID?: number,\n  playlistSecretToken?: string\n) => {\n  return await getTrackInfoBase(\n    clientID,\n    axiosInstance,\n    ids,\n    playlistID,\n    playlistSecretToken\n  )\n}\nexport default getInfo\n","/** @internal @packageDocumentation */\n\nimport { Readable } from 'stream'\n\nimport { AxiosInstance } from 'axios'\nimport m3u8stream from 'm3u8stream'\n\nimport getInfo, { Transcoding } from './info'\nimport { DownloadOptions } from './types'\nimport { appendURL, handleRequestErrs } from './util'\n\nexport const getMediaURL = async (\n  url: string,\n  clientID: string,\n  axiosInstance: AxiosInstance\n): Promise<string> => {\n  const res = await axiosInstance.get(appendURL(url, 'client_id', clientID), {\n    headers: {\n      'User-Agent':\n        'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.129 Safari/537.36',\n      Accept: '*/*',\n      'Accept-Encoding': 'gzip, deflate, br'\n    },\n    withCredentials: true\n  })\n  if (!res.data.url) {\n    throw new Error(\n      `Invalid response from Soundcloud. Check if the URL provided is correct: ${url}`\n    )\n  }\n  return res.data.url\n}\n\nexport const getProgressive = async (\n  mediaUrl: string,\n  axiosInstance: AxiosInstance\n) => {\n  const r = await axiosInstance.get(mediaUrl, {\n    withCredentials: true,\n    responseType: 'stream'\n  })\n\n  return r.data\n}\n\nexport const getHLSStream = (mediaUrl: string) => m3u8stream(mediaUrl)\n\nexport const fromURL = async (\n  url: string,\n  clientID: string,\n  axiosInstance: AxiosInstance\n): Promise<any | m3u8stream.Stream> => {\n  try {\n    const mediaUrl = await getMediaURL(url, clientID, axiosInstance)\n\n    if (url.includes('/progressive')) {\n      return await getProgressive(mediaUrl, axiosInstance)\n    }\n\n    return getHLSStream(mediaUrl)\n  } catch (err) {\n    throw handleRequestErrs(err)\n  }\n}\n\nexport const fromMediaObj = async (\n  media: Transcoding,\n  clientID: string,\n  axiosInstance: AxiosInstance\n) => {\n  if (!validatemedia(media)) throw new Error('Invalid media object provided')\n  return await fromURL(media.url, clientID, axiosInstance)\n}\n\nexport const fromDownloadLink = async (\n  id: number,\n  clientID: string,\n  axiosInstance: AxiosInstance\n): Promise<Readable> => {\n  const {\n    data: { redirectUri }\n  } = await axiosInstance.get(\n    appendURL(\n      `https://api-v2.soundcloud.com/tracks/${id}/download`,\n      'client_id',\n      clientID\n    )\n  )\n  const { data } = await axiosInstance.get(redirectUri, {\n    responseType: 'stream'\n  })\n\n  return data\n}\n\n/** @internal */\nexport const download = async (\n  url: string,\n  options: DownloadOptions,\n  clientID: string,\n  axiosInstance: AxiosInstance\n): Promise<Readable> => {\n  const info = await getInfo(url, clientID, axiosInstance)\n  if (info.downloadable && options.useDirectLink) {\n    // Try the direct link. If it fails use standard procedure\n    try {\n      return await fromDownloadLink(info.id, clientID, axiosInstance)\n    } catch (err) {}\n  }\n  if (!info.media) throw new Error('No media found for given URL')\n  return await fromMediaObj(info.media.transcodings[0], clientID, axiosInstance)\n}\n\nconst validatemedia = (media: Transcoding) => {\n  if (!media.url || !media.format) return false\n  return true\n}\n","import { Readable } from 'stream'\n\nimport { AxiosInstance } from 'axios'\n\nimport { download } from './download'\nimport { getSetInfo } from './info'\n\nexport const downloadPlaylist = async (\n  url: string,\n  clientID: string,\n  axiosInstance: AxiosInstance\n): Promise<[Readable[], string[]]> => {\n  const info = await getSetInfo(url, clientID, axiosInstance)\n\n  const trackNames: string[] = []\n  const result = await Promise.all(\n    info.tracks.map((track) => {\n      const p = download(track.permalink_url!, {}, clientID, axiosInstance)\n      trackNames.push(track.title!)\n      return p\n    })\n  )\n\n  return [result, trackNames]\n}\n","import FORMATS from './formats'\nimport { Transcoding } from './info'\nimport STREAMING_PROTOCOLS from './protocols'\n\nexport interface FilterPredicateObject {\n  protocol?: STREAMING_PROTOCOLS\n  format?: FORMATS\n}\n\n/** @internal */\nconst filterMedia = (\n  media: Transcoding[],\n  predicateObj: FilterPredicateObject\n): Transcoding[] => {\n  return media.filter(({ format }) => {\n    let match = false\n    if (predicateObj.protocol) match = format.protocol === predicateObj.protocol\n    if (predicateObj.format) match = format.mime_type === predicateObj.format\n    return match\n  })\n}\n\nexport default filterMedia\n","/**\n * Soundcloud streams tracks using these protocols.\n */\nenum STREAMING_PROTOCOLS {\n  HLS = 'hls',\n  PROGRESSIVE = 'progressive'\n}\n\n/** @internal */\nexport const _PROTOCOLS = {\n  HLS: STREAMING_PROTOCOLS.HLS,\n  PROGRESSIVE: STREAMING_PROTOCOLS.PROGRESSIVE\n}\n\nexport default STREAMING_PROTOCOLS\n","import { AxiosInstance } from 'axios'\n\nimport { TrackInfo } from './info'\nimport { appendURL, kindMismatchError, PaginatedQuery } from './util'\n\nexport interface Like {\n  // eslint-disable-next-line camelcase\n  created_at: string\n  kind: string\n  track: TrackInfo\n}\n\nexport interface GetLikesOptions {\n  profileUrl?: string\n  id?: number\n  limit?: number // -1 indicates no limit\n  offset?: number\n  nextHref?: string\n}\n\n/** @internal */\nexport const getLikes = async (\n  options: GetLikesOptions,\n  clientID: string,\n  axiosInstance: AxiosInstance\n): Promise<PaginatedQuery<Like>> => {\n  let u = ''\n  if (!options.nextHref) {\n    if (!options.limit) options.limit = -1\n    if (!options.offset) options.offset = 0\n    u = appendURL(\n      `https://api-v2.soundcloud.com/users/${options.id}/likes`,\n      'client_id',\n      clientID,\n      'limit',\n      '' + (options.limit === -1 ? 200 : options.limit),\n      'offset',\n      '' + options.offset\n    )\n  } else {\n    u = appendURL(options.nextHref, 'client_id', clientID)\n  }\n\n  let response: PaginatedQuery<Like> | undefined \n  let nextHref = 'start'\n\n  // If options.limit > 0, query each page of likes until we have collected\n  // `options.limit` liked tracks.\n  // If options.limit === -1, query every page of likes\n  while (nextHref && (options.limit! > 0 || options.limit === -1)) {\n    const { data } = await axiosInstance.get(u)\n\n    const query = data as PaginatedQuery<Like>\n    if (!query.collection) throw new Error('Invalid JSON response received')\n    if (query.collection.length === 0) return data\n\n    if (query.collection[0].kind !== 'like')\n      throw kindMismatchError('like', query.collection[0].kind)\n\n    // Only add tracks (for now)\n    query.collection = query.collection.reduce<Like[]>(\n      (prev, curr) => (curr.track ? prev.concat(curr) : prev),\n      []\n    )\n    if (!response) {\n      response = query\n    } else {\n      response.collection.push(...query.collection)\n    }\n\n    if (options.limit !== -1) {\n      options.limit! -= query.collection.length\n      // We have collected enough likes\n      if (options.limit! <= 0) break\n    }\n\n    nextHref = query.next_href\n    if (nextHref) {\n      if (options.limit !== -1) {\n        const url = new URL(nextHref)\n        url.searchParams.set('limit', '' + options.limit)\n        nextHref = url.toString()\n      }\n      u = appendURL(nextHref, 'client_id', clientID)\n    }\n  }\n\n  return response!\n}\n","/* eslint-disable camelcase */\nimport { AxiosInstance } from 'axios'\n\nimport { SetInfo, TrackInfo, User } from './info'\nimport { appendURL, PaginatedQuery } from './util'\n\n/** @internal */\nconst baseURL = 'https://api-v2.soundcloud.com/search'\n\nexport interface RelatedResponse<T> extends PaginatedQuery<T> {\n  variant: string\n}\n\nexport interface SearchOptions {\n  limit?: number // defaults to 10\n  offset?: number // defaults to 0\n  resourceType?: SoundcloudResource | 'all' // defaults to 'tracks'\n  query?: string\n  nextHref?: string\n}\n\nexport type SearchResponseAll = PaginatedQuery<User | SetInfo | TrackInfo>\n\nexport type SoundcloudResource = 'tracks' | 'users' | 'albums' | 'playlists'\nconst validResourceTypes = ['tracks', 'users', 'albums', 'playlists', 'all']\n\n/** @internal */\nexport const search = async (\n  options: SearchOptions,\n  axiosInstance: AxiosInstance,\n  clientID: string\n): Promise<SearchResponseAll> => {\n  let url = ''\n  if (!options.limit) options.limit = 10\n  if (!options.offset) options.offset = 0\n  if (!options.resourceType) options.resourceType = 'tracks'\n  if (options.nextHref) {\n    url = appendURL(options.nextHref, 'client_id', clientID)\n  } else if (options.query) {\n    if (!validResourceTypes.includes(options.resourceType))\n      throw new Error(\n        `${options.resourceType} is not one of ${validResourceTypes\n          .map((str) => `'${str}'`)\n          .join(', ')}`\n      )\n    url = appendURL(\n      `${baseURL}${\n        options.resourceType === 'all' ? '' : `/${options.resourceType}`\n      }`,\n      'client_id',\n      clientID,\n      'q',\n      options.query,\n      'limit',\n      '' + options.limit,\n      'offset',\n      '' + options.offset\n    )\n  } else {\n    throw new Error('One of options.query or options.nextHref is required')\n  }\n  const { data } = await axiosInstance.get(url)\n  return data as SearchResponseAll\n}\n\n/** @internal */\nexport const related = async <T extends TrackInfo>(\n  id: number,\n  limit = 10,\n  offset = 0,\n  axiosInstance: AxiosInstance,\n  clientID: string\n): Promise<RelatedResponse<T>> => {\n  const { data } = await axiosInstance.get(\n    appendURL(\n      `https://api-v2.soundcloud.com/tracks/${id}/related`,\n      'client_id',\n      clientID,\n      'offset',\n      '' + offset,\n      'limit',\n      '' + limit\n    )\n  )\n  return data as RelatedResponse<T>\n}\n","import { AxiosInstance } from 'axios'\n\n/** @internal @packageDocumentation */\nconst regexp = /^https?:\\/\\/(soundcloud\\.com)\\/(.*)$/\n\nconst mobileUrlRegex = /^https?:\\/\\/(m\\.soundcloud\\.com)\\/(.*)$/\n\n// const firebaseUrlRegex = /^https?:\\/\\/(soundcloud\\.app\\.goo\\.gl)\\/(.*)$/\n\nconst firebaseRegexp = /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,500}\\.[a-zA-Z0-9()]{1,500}\\b([-a-zA-Z0-9()@:%_+.~#?&//\\\\=]*)/g\n\nconst isURL = (url: string, testMobile?: boolean, testFirebase?: boolean) => {\n  let success = false\n  if (testMobile) {\n    if (url.match(mobileUrlRegex))\n      success = !!(url.match(regexp) as RegExpMatchArray)[2]\n  }\n\n  if (!success && testFirebase) {\n    if (url.match(firebaseRegexp))\n      success = !!(url.match(firebaseRegexp) as RegExpMatchArray)[2]\n  }\n\n  if (!success && url.match(regexp))\n    success = !!(url.match(regexp) as RegExpMatchArray)[2]\n\n  return success\n}\n\nexport const isPlaylistURL = (url: string) => {\n  if (!isURL(url)) return false\n\n  try {\n    const u = new URL(url)\n    return u.pathname.includes('/sets/')\n  } catch (err) {\n    return false\n  }\n}\n\nexport const isPersonalizedTrackURL = (url: string) => {\n  if (!isURL(url)) return false\n  return url.includes(\n    'https://soundcloud.com/discover/sets/personalized-tracks::'\n  )\n}\n\nexport const stripMobilePrefix = (url: string) => {\n  if (!url.includes('m.soundcloud.com')) return url\n  const _url = new URL(url)\n  _url.hostname = 'soundcloud.com'\n  return _url.toString()\n}\n\nexport const isFirebaseURL = (url: string) => {\n  return url.includes('https://soundcloud.app.goo.gl')\n}\n\nexport const convertFirebaseURL = async (\n  url: string,\n  axiosInstance: AxiosInstance\n) => {\n  const _url = new URL(url)\n  _url.searchParams.set('d', '1')\n  const { data }: { data: string } = await axiosInstance.get(_url.toString())\n\n  const matches = data.match(firebaseRegexp)\n  if (!matches)\n    throw new Error(\n      `Could not find URL for this SoundCloud Firebase URL: ${url}`\n    )\n\n  const firebaseURL = matches.find((match) => regexp.test(match))\n  if (!firebaseURL) return undefined\n\n  // Some of the characters are in their unicode character code form (e.g. \\u003d),\n  // use regex to find occurences of \\uXXXX, parse their hexidecimal unicode value and convert to regular char\n  return firebaseURL.replace(/\\\\u([\\d\\w]{4})/gi, (_match, grp) =>\n    String.fromCharCode(parseInt(grp, 16))\n  )\n}\n\nexport default isURL\n","import { AxiosInstance } from 'axios'\n\nimport { User } from './info'\nimport { appendURL, resolveURL } from './util'\n\n/** @internal */\nexport const getUser = async (\n  url: string,\n  clientID: string,\n  axiosInstance: AxiosInstance\n): Promise<User> => {\n  const u = appendURL(resolveURL, 'url', url, 'client_id', clientID)\n  const { data } = await axiosInstance.get(u)\n\n  if (!(data as User).avatar_url)\n    throw new Error(\n      'JSON response is not a user. Is profile URL correct? : ' + url\n    )\n\n  return data as User\n}\n","import * as fs from 'fs'\nimport * as path from 'path'\nimport { Readable } from 'stream'\n\nimport axios, { AxiosInstance } from 'axios'\nimport sckey from 'soundcloud-key-fetch'\n\nimport { download, fromMediaObj } from './download'\nimport { downloadPlaylist } from './download-playlist'\nimport filterMedia, { FilterPredicateObject } from './filter-media'\nimport FORMATS, { _FORMATS } from './formats'\nimport getInfo, {\n  getSetInfo,\n  getTrackInfoByID,\n  Transcoding,\n  User\n} from './info'\nimport { getLikes, GetLikesOptions, Like } from './likes'\nimport STREAMING_PROTOCOLS, { _PROTOCOLS } from './protocols'\nimport { related, search, SearchOptions} from './search'\nimport { DownloadOptions } from './types'\nimport isValidURL, {\n  convertFirebaseURL,\n  isFirebaseURL,\n  isPersonalizedTrackURL,\n  isPlaylistURL,\n  stripMobilePrefix\n} from './url'\nimport { getUser } from './user'\nimport { PaginatedQuery } from './util'\n\n/** @internal */\nconst downloadFormat = async (\n  url: string,\n  clientID: string,\n  format: FORMATS,\n  axiosInstance: AxiosInstance\n) => {\n  const info = await getInfo(url, clientID, axiosInstance)\n  if (!info.media) throw new Error('No media found')\n  const filtered = filterMedia(info.media.transcodings, { format: format })\n  if (filtered.length === 0) {\n    throw new Error(`Could not find media with specified format: (${format})`)\n  }\n  return await fromMediaObj(filtered[0], clientID, axiosInstance)\n}\n\ninterface ClientIDData {\n  clientID: string\n  date: Date\n}\n\nexport interface SCDLOptions {\n  // Set a custom client ID to use\n  clientID?: string\n  // Set to true to save client ID to file\n  saveClientID?: boolean\n  // File path to save client ID, defaults to '../client_id.json\"\n  filePath?: string\n  // Custom axios instance to use\n  axiosInstance?: AxiosInstance\n  // Whether or not to automatically convert mobile links to regular links, defaults to true\n  stripMobilePrefix?: boolean\n  // Whether or not to automatically convert SoundCloud Firebase links copied from the mobile app\n  // (e.g. https://soundcloud.app.goo.gl/xxxxxxxxx), defaults to true.\n  convertFirebaseLinks?: boolean\n}\n\nexport class SCDL {\n  STREAMING_PROTOCOLS: { [key: string]: STREAMING_PROTOCOLS } = _PROTOCOLS\n  FORMATS: { [key: string]: FORMATS } = _FORMATS\n\n  private _clientID = ''\n  private _filePath?: string\n\n  axios: AxiosInstance = axios\n  saveClientID = process.env.SAVE_CLIENT_ID\n    ? process.env.SAVE_CLIENT_ID.toLowerCase() === 'true'\n    : false\n\n  stripMobilePrefix: boolean\n  convertFirebaseLinks: boolean\n\n  constructor(options?: SCDLOptions) {\n    if (!options) options = {}\n    if (options.saveClientID) {\n      this.saveClientID = options.saveClientID\n      if (options.filePath) this._filePath = options.filePath\n    } else {\n      if (options.clientID) {\n        this._clientID = options.clientID\n      }\n    }\n\n    if (options.axiosInstance) {\n      this.setAxiosInstance(options.axiosInstance)\n    } else {\n      this.setAxiosInstance(axios)\n    }\n\n    if (!options.stripMobilePrefix) options.stripMobilePrefix = true\n    if (!options.convertFirebaseLinks) options.convertFirebaseLinks = true\n\n    this.stripMobilePrefix = options.stripMobilePrefix\n    this.convertFirebaseLinks = options.convertFirebaseLinks\n  }\n\n  /**\n   * Returns a media Transcoding that matches the given predicate object\n   * @param media - The Transcodings to filter\n   * @param predicateObj - The desired Transcoding object to match\n   * @returns An array of Transcodings that match the predicate object\n   */\n  filterMedia(media: Transcoding[], predicateObj: FilterPredicateObject) {\n    return filterMedia(media, predicateObj)\n  }\n\n  /**\n   * Get the audio of a given track. It returns the first format found.\n   *\n   * @param url - The URL of the Soundcloud track\n   * @param useDirectLink - Whether or not to use the download link if the artist has set the track to be downloadable. This has erratic behaviour on some environments.\n   * @returns A ReadableStream containing the audio data\n   */\n  async download(url: string, options?: DownloadOptions): Promise<Readable> {\n    if (!options) options = {}\n    return await download(\n      await this.prepareURL(url),\n      options,\n      await this.getClientID(),\n      this.axios\n    )\n  }\n\n  /**\n   *  Get the audio of a given track with the specified format\n   * @param url - The URL of the Soundcloud track\n   * @param format - The desired format\n   */\n  async downloadFormat(url: string, format: FORMATS): Promise<Readable> {\n    return downloadFormat(\n      await this.prepareURL(url),\n      await this.getClientID(),\n      format,\n      this.axios\n    )\n  }\n\n  /**\n   * Returns info about a given track.\n   * @param url - URL of the Soundcloud track\n   * @returns Info about the track\n   */\n  async getInfo(url: string) {\n    return getInfo(\n      await this.prepareURL(url),\n      await this.getClientID(),\n      this.axios\n    )\n  }\n\n  /**\n   * Returns info about the given track(s) specified by ID.\n   * @param ids - The ID(s) of the tracks\n   * @returns Info about the track\n   */\n  async getTrackInfoByID(\n    ids: number[],\n    playlistID?: number,\n    playlistSecretToken?: string\n  ) {\n    return getTrackInfoByID(\n      await this.getClientID(),\n      this.axios,\n      ids,\n      playlistID,\n      playlistSecretToken\n    )\n  }\n\n  /**\n   * Returns info about the given set\n   * @param url - URL of the Soundcloud set\n   * @returns Info about the set\n   */\n  async getSetInfo(url: string) {\n    return getSetInfo(\n      await this.prepareURL(url),\n      await this.getClientID(),\n      this.axios\n    )\n  }\n\n  /**\n   * Searches for tracks/playlists for the given query\n   * @param options - The search option\n   * @returns SearchResponse\n   */\n  async search(options: SearchOptions) {\n    return search(options, this.axios, await this.getClientID())\n  }\n\n  /**\n   * Finds related tracks to the given track specified by ID\n   * @param id - The ID of the track\n   * @param limit - The number of results to return\n   * @param offset - Used for pagination, set to 0 if you will not use this feature.\n   */\n  async related(id: number, limit: number, offset = 0) {\n    return related(id, limit, offset, this.axios, await this.getClientID())\n  }\n\n  /**\n   * Returns the audio streams and titles of the tracks in the given playlist.\n   * @param url - The url of the playlist\n   */\n  async downloadPlaylist(url: string): Promise<[Readable[], string[]]> {\n    return downloadPlaylist(\n      await this.prepareURL(url),\n      await this.getClientID(),\n      this.axios\n    )\n  }\n\n  /**\n   * Returns track information for a user's likes\n   * @param options - Can either be the profile URL of the user, or their ID\n   * @returns - An array of tracks\n   */\n  async getLikes(options: GetLikesOptions): Promise<PaginatedQuery<Like>> {\n    let id: number\n    const clientID = await this.getClientID()\n    if (options.id) {\n      id = options.id\n    } else if (options.profileUrl) {\n      const user = await getUser(\n        await this.prepareURL(options.profileUrl),\n        clientID,\n        this.axios\n      )\n      id = user.id\n    } else if (options.nextHref) {\n      return await getLikes(options, clientID, this.axios)\n    } else {\n      throw new Error('options.id or options.profileURL must be provided.')\n    }\n    options.id = id\n\n    return getLikes(options, clientID, this.axios)\n  }\n\n  /**\n   * Returns information about a user\n   * @param url - The profile URL of the user\n   */\n  async getUser(url: string): Promise<User> {\n    return getUser(\n      await this.prepareURL(url),\n      await this.getClientID(),\n      this.axios\n    )\n  }\n\n  /**\n   * Sets the instance of Axios to use to make requests to SoundCloud API\n   * @param instance - An instance of Axios\n   */\n  setAxiosInstance(instance: AxiosInstance) {\n    this.axios = instance\n  }\n\n  /**\n   * Returns whether or not the given URL is a valid Soundcloud URL\n   * @param url - URL of the Soundcloud track\n   */\n  isValidUrl(url: string) {\n    return isValidURL(url, this.convertFirebaseLinks, this.stripMobilePrefix)\n  }\n\n  /**\n   * Returns whether or not the given URL is a valid playlist SoundCloud URL\n   * @param url - The URL to check\n   */\n  isPlaylistURL(url: string) {\n    return isPlaylistURL(url)\n  }\n\n  /**\n   * Returns true if the given URL is a personalized track URL. (of the form https://soundcloud.com/discover/sets/personalized-tracks::user-sdlkfjsldfljs:847104873)\n   * @param url - The URL to check\n   */\n  isPersonalizedTrackURL(url: string) {\n    return isPersonalizedTrackURL(url)\n  }\n\n  /**\n   * Returns true if the given URL is a Firebase URL (of the form https://soundcloud.app.goo.gl/XXXXXXXX)\n   * @param url - The URL to check\n   */\n  isFirebaseURL(url: string) {\n    return isFirebaseURL(url)\n  }\n\n  async getClientID(): Promise<string> {\n    if (!this._clientID) {\n      await this.setClientID()\n    }\n\n    return this._clientID\n  }\n\n  /** @internal */\n  async setClientID(clientID?: string): Promise<string> {\n    if (!clientID) {\n      if (!this._clientID) {\n        if (this.saveClientID) {\n          const filename = path.resolve(\n            __dirname,\n            this._filePath ? this._filePath : '../client_id.json'\n          )\n          const c = await this._getClientIDFromFile(filename)\n          if (!c) {\n            this._clientID = await sckey.fetchKey()\n            const data = {\n              clientID: this._clientID,\n              date: new Date().toISOString()\n            }\n            fs.writeFile(filename, JSON.stringify(data), {}, (err) => {\n              if (err) console.log('Failed to save client_id to file: ' + err)\n            })\n          } else {\n            this._clientID = c\n          }\n        } else {\n          this._clientID = await sckey.fetchKey()\n        }\n      }\n\n      return this._clientID\n    }\n\n    this._clientID = clientID\n\n    return clientID\n  }\n\n  /** @internal */\n  private async _getClientIDFromFile(filename: string): Promise<string> {\n    return new Promise((resolve, reject) => {\n      if (!fs.existsSync(filename)) return resolve('')\n      \n      fs.readFile(filename, { encoding: 'utf8'}, (err, data) => {\n          if (err) return reject(err)\n          let c: ClientIDData\n          try {\n            c = JSON.parse(data)\n          } catch (err) {\n            return reject(err)\n          }\n          if (!c.date && !c.clientID) {\n            return reject(\n              new Error(\n                \"Property 'data' or 'clientID' missing from client_id.json\"\n              )\n            )\n          }\n          if (typeof c.clientID !== 'string') {\n            return reject(\n              new Error(\"Property 'clientID' is not a string in client_id.json\")\n            )\n          }\n          if (typeof c.date !== 'string') {\n            return reject(\n              new Error(\"Property 'date' is not a string in client_id.json\")\n            )\n          }\n          const d = new Date(c.date)\n          if (Number.isNaN(d.getDay())) {\n            return reject(\n              new Error(\"Invalid date object from 'date' in client_id.json\")\n            )\n          }\n          const dayMs = 60 * 60 * 24 * 1000\n          if (new Date().getTime() - d.getTime() >= dayMs) {\n            // Older than a day, delete\n            fs.unlink(filename, (err) => {\n              if (err) console.log('Failed to delete client_id.json: ' + err)\n            })\n            return resolve('')\n          } \n            return resolve(c.clientID)\n      })\n    })\n  }\n\n  /**\n   * Prepares the given URL by stripping its mobile prefix (if this.stripMobilePrefix is true)\n   * and converting it to a regular URL (if this.convertFireBaseLinks is true.)\n   * @param url\n   */\n  async prepareURL(url: string): Promise<string> {\n    if (this.stripMobilePrefix) url = stripMobilePrefix(url)\n    if (this.convertFirebaseLinks) {\n      if (isFirebaseURL(url)) { \n        const firebaseUrl = await convertFirebaseURL(url, this.axios) \n        if (firebaseUrl) {\n          url = firebaseUrl\n        }\n      }\n    }\n\n    return url\n  }\n}\n\n// SCDL instance with default configutarion\nconst scdl = new SCDL()\n\n// Creates an instance of SCDL with custom configuration\nconst create = (options: SCDLOptions): SCDL => new SCDL(options)\n\nexport { create }\n\nscdl.STREAMING_PROTOCOLS = _PROTOCOLS\nscdl.FORMATS = _FORMATS\n\nexport default scdl\n"],"names":["FORMATS","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","handleRequestErrs","response","status","message","appendURL","url","params","u","URL","val","idx","searchParams","append","href","extractIDFromPersonalizedTrackURL","includes","split","getTrackInfoBase","clientID","axiosRef","ids","playlistID","playlistSecretToken","join","get","data","getInfoBase","withCredentials","console","log","getSetInfoBase","temp","setInfo","tracks","map","track","id","secret_token","incompleteTracks","filter","title","completeTracks","t","splitIds","x","Math","floor","promises","getTrackInfoByID","all","concat","sortTracks","j","getInfo","axiosInstance","idString","parseInt","media","getSetInfo","getMediaURL","headers","Accept","res","getProgressive","mediaUrl","responseType","getHLSStream","m3u8stream","fromURL","fromMediaObj","validatemedia","fromDownloadLink","redirectUri","download","options","downloadable","useDirectLink","transcodings","format","downloadPlaylist","trackNames","p","permalink_url","filterMedia","predicateObj","match","protocol","mime_type","STREAMING_PROTOCOLS","_FORMATS","MP3","OPUS","getLikes","nextHref","limit","offset","query","collection","kind","reduce","curr","next_href","set","_PROTOCOLS","HLS","PROGRESSIVE","validResourceTypes","search","resourceType","str","related","regexp","mobileUrlRegex","firebaseRegexp","isURL","testMobile","testFirebase","success","stripMobilePrefix","_url","hostname","isFirebaseURL","convertFirebaseURL","matches","firebaseURL","find","test","replace","_match","grp","String","fromCharCode","getUser","avatar_url","downloadFormat","filtered","SCDL","axios","process","env","SAVE_CLIENT_ID","toLowerCase","saveClientID","filePath","_filePath","_clientID","setAxiosInstance","convertFirebaseLinks","prepareURL","getClientID","profileUrl","instance","isValidUrl","isValidURL","isPlaylistURL","pathname","isPersonalizedTrackURL","setClientID","filename","path","__dirname","_getClientIDFromFile","c","sckey","fetchKey","date","Date","toISOString","fs","JSON","stringify","encoding","parse","d","Number","getDay","getTime","firebaseUrl","scdl"],"mappings":"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"}